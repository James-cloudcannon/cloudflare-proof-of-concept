---
import Layout from "./Layout.astro";
import RelatedPosts from "../components/blog/RelatedPosts.astro";
import SocialButtons from "../components/blog/SocialButtons.astro";
import CloudflareTV from "../components/blog/CloudflareTV.astro";
import AuthorSocials from "../components/blog/AuthorSocials.astro";
import { getCollection } from "astro:content";
import type { MarkdownLayoutProps } from "astro";

type Props =
  | {
      title: string;
      date: string;
      image: string;
      image_alt: string;
      author: Array<{ name: string; avatar: string; social?: string }>;
      body: string;
      tags: string[];
    }
  | MarkdownLayoutProps<{
      title: string;
      date: string;
      image: string;
      image_alt: string;
      author: Array<{ name: string; avatar: string; social?: string }>;
      tags: string[];
    }>;

const props = Astro.props.frontmatter ?? Astro.props;
const { title, date, image, image_alt, author, tags } = props;
const content = Astro.props.body ?? Astro.props.rawContent();
const wordCount = content.split(" ").length;
const readingTime = Math.floor(wordCount / 183);
const dateObj = new Date(date);
const slug = Astro.url.pathname.replace("/blog/", "");

const formattedDate = dateObj.toLocaleDateString("en-US", {
  year: "numeric",
  month: "2-digit",
  day: "2-digit",
});

const posts = await getCollection("blog");
---

<Layout {...props}>
  <main class="blog-post">
    <article class="blog-post__article">
      <h1 class="blog-post__title">{title}</h1>
      <li class="blog-post__date">
        <p>{formattedDate}</p>
      </li>
      <ul class="blog-post__author">
        {
          author.map((authorName) => (
            <li class="blog-post__author__item" key={authorName.name}>
              <a
                href={`/author/${authorName.name.toLowerCase().replace(" ", "-")}`}
                class="blog-post__author__avatar"
              >
                <img
                  src={authorName.avatar}
                  alt={authorName.name}
                  width="62"
                  height="62"
                />
              </a>
              <div class="blog-post__author__name">
                <a
                  href={`/author/${authorName.name.toLowerCase().replace(" ", "-")}`}
                  class="blog-post__author__name__link"
                >
                  {authorName.name}
                </a>
              </div>
            </li>
          ))
        }
      </ul>
      <div class="blog-post__size-wrapper">
        <p>{readingTime}<span> min read</span></p>
      </div>
      <div class="blog-post__content post-content">
        <slot />
      </div>
    </article>
    <SocialButtons title={title} slug={slug} />
    <CloudflareTV />
    <section class="blog-post__tags">
      {
        tags.map((tag, i) => (
          <a href={`/tags/${tag.toLowerCase()}`} key={i}>
            {tag[0].toUpperCase() + tag.slice(1)}
          </a>
        ))
      }
    </section>
    <AuthorSocials author={author} />
    {
      (() => {
        const relatedPosts = posts
          .filter(
            (post) =>
              post.slug !== slug &&
              post.data.tags.some((tag) => tags.includes(tag))
          )
          .map((post) => {
            post.data.featured = false;
            return post;
          });

        return (
          relatedPosts.length > 0 && (
            <section class="blog-post__recent-posts">
              <h2 class="blog-post__recent-title">Recent Posts</h2>
              <div class="blog-post__recent-grid">
                {relatedPosts.slice(0, 4).map((post) => (
                  <RelatedPosts post={post} />
                ))}
              </div>
            </section>
          )
        );
      })()
    }
  </main>
</Layout>
